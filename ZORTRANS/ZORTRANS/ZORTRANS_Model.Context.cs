//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZORTRANS
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ZorTranSEntities : DbContext
    {
        public ZorTranSEntities()
            : base("name=ZorTranSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Angajati> Angajatis { get; set; }
        public virtual DbSet<Clienti> Clientis { get; set; }
        public virtual DbSet<Locatii> Locatiis { get; set; }
        public virtual DbSet<Masini> Masinis { get; set; }
        public virtual DbSet<Transporturi> Transporturis { get; set; }
        public virtual DbSet<Persoane_Fizice> Persoane_Fizice { get; set; }
        public virtual DbSet<Persoane_Juridice> Persoane_Juridice { get; set; }
        public virtual DbSet<Soferi> Soferis { get; set; }
    
        public virtual ObjectResult<AfisareTransporturi_Result> AfisareTransporturi()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AfisareTransporturi_Result>("AfisareTransporturi");
        }
    
        public virtual ObjectResult<string> CautareFirma(string oras)
        {
            var orasParameter = oras != null ?
                new ObjectParameter("oras", oras) :
                new ObjectParameter("oras", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CautareFirma", orasParameter);
        }
    
        public virtual ObjectResult<string> CautareLocatieFirma(string nume)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("nume", nume) :
                new ObjectParameter("nume", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CautareLocatieFirma", numeParameter);
        }
    
        public virtual ObjectResult<CautareSoferAuto_Result> CautareSoferAuto(string nume, string prenume)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("nume", nume) :
                new ObjectParameter("nume", typeof(string));
    
            var prenumeParameter = prenume != null ?
                new ObjectParameter("prenume", prenume) :
                new ObjectParameter("prenume", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CautareSoferAuto_Result>("CautareSoferAuto", numeParameter, prenumeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ConsumTransport(Nullable<int> consum, Nullable<int> id)
        {
            var consumParameter = consum.HasValue ?
                new ObjectParameter("consum", consum) :
                new ObjectParameter("consum", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ConsumTransport", consumParameter, idParameter);
        }
    
        public virtual ObjectResult<string> EmailFirma(string nume)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("nume", nume) :
                new ObjectParameter("nume", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("EmailFirma", numeParameter);
        }
    
        public virtual ObjectResult<InfoAngajati_Result> InfoAngajati()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InfoAngajati_Result>("InfoAngajati");
        }
    
        public virtual int insert_masina(string parametru, string parametru1, string parametru2, string parametru4, Nullable<int> parametru5)
        {
            var parametruParameter = parametru != null ?
                new ObjectParameter("parametru", parametru) :
                new ObjectParameter("parametru", typeof(string));
    
            var parametru1Parameter = parametru1 != null ?
                new ObjectParameter("parametru1", parametru1) :
                new ObjectParameter("parametru1", typeof(string));
    
            var parametru2Parameter = parametru2 != null ?
                new ObjectParameter("parametru2", parametru2) :
                new ObjectParameter("parametru2", typeof(string));
    
            var parametru4Parameter = parametru4 != null ?
                new ObjectParameter("parametru4", parametru4) :
                new ObjectParameter("parametru4", typeof(string));
    
            var parametru5Parameter = parametru5.HasValue ?
                new ObjectParameter("parametru5", parametru5) :
                new ObjectParameter("parametru5", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_masina", parametruParameter, parametru1Parameter, parametru2Parameter, parametru4Parameter, parametru5Parameter);
        }
    
        public virtual ObjectResult<NrMasini_Result> NrMasini()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NrMasini_Result>("NrMasini");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<string> TelefonAngajat(string nume, string prenume)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("nume", nume) :
                new ObjectParameter("nume", typeof(string));
    
            var prenumeParameter = prenume != null ?
                new ObjectParameter("prenume", prenume) :
                new ObjectParameter("prenume", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("TelefonAngajat", numeParameter, prenumeParameter);
        }
    
        public virtual ObjectResult<TransportDupaData_Result> TransportDupaData(Nullable<System.DateTime> data)
        {
            var dataParameter = data.HasValue ?
                new ObjectParameter("data", data) :
                new ObjectParameter("data", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransportDupaData_Result>("TransportDupaData", dataParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> VenitTotalFirma()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("VenitTotalFirma");
        }
    
        public virtual int insert_transport(string parametru1, string parametru2, Nullable<int> parametru3, string parametru4, Nullable<double> parametru5, Nullable<double> parametru6, Nullable<System.DateTime> parametru7, Nullable<int> parametru8)
        {
            var parametru1Parameter = parametru1 != null ?
                new ObjectParameter("parametru1", parametru1) :
                new ObjectParameter("parametru1", typeof(string));
    
            var parametru2Parameter = parametru2 != null ?
                new ObjectParameter("parametru2", parametru2) :
                new ObjectParameter("parametru2", typeof(string));
    
            var parametru3Parameter = parametru3.HasValue ?
                new ObjectParameter("parametru3", parametru3) :
                new ObjectParameter("parametru3", typeof(int));
    
            var parametru4Parameter = parametru4 != null ?
                new ObjectParameter("parametru4", parametru4) :
                new ObjectParameter("parametru4", typeof(string));
    
            var parametru5Parameter = parametru5.HasValue ?
                new ObjectParameter("parametru5", parametru5) :
                new ObjectParameter("parametru5", typeof(double));
    
            var parametru6Parameter = parametru6.HasValue ?
                new ObjectParameter("parametru6", parametru6) :
                new ObjectParameter("parametru6", typeof(double));
    
            var parametru7Parameter = parametru7.HasValue ?
                new ObjectParameter("parametru7", parametru7) :
                new ObjectParameter("parametru7", typeof(System.DateTime));
    
            var parametru8Parameter = parametru8.HasValue ?
                new ObjectParameter("parametru8", parametru8) :
                new ObjectParameter("parametru8", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_transport", parametru1Parameter, parametru2Parameter, parametru3Parameter, parametru4Parameter, parametru5Parameter, parametru6Parameter, parametru7Parameter, parametru8Parameter);
        }
    
        public virtual int insert_angajat(string parametru1, string parametru2, string parametru3, Nullable<System.DateTime> parametru4, string parametru5, string parametru6, Nullable<int> parametru7)
        {
            var parametru1Parameter = parametru1 != null ?
                new ObjectParameter("parametru1", parametru1) :
                new ObjectParameter("parametru1", typeof(string));
    
            var parametru2Parameter = parametru2 != null ?
                new ObjectParameter("parametru2", parametru2) :
                new ObjectParameter("parametru2", typeof(string));
    
            var parametru3Parameter = parametru3 != null ?
                new ObjectParameter("parametru3", parametru3) :
                new ObjectParameter("parametru3", typeof(string));
    
            var parametru4Parameter = parametru4.HasValue ?
                new ObjectParameter("parametru4", parametru4) :
                new ObjectParameter("parametru4", typeof(System.DateTime));
    
            var parametru5Parameter = parametru5 != null ?
                new ObjectParameter("parametru5", parametru5) :
                new ObjectParameter("parametru5", typeof(string));
    
            var parametru6Parameter = parametru6 != null ?
                new ObjectParameter("parametru6", parametru6) :
                new ObjectParameter("parametru6", typeof(string));
    
            var parametru7Parameter = parametru7.HasValue ?
                new ObjectParameter("parametru7", parametru7) :
                new ObjectParameter("parametru7", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_angajat", parametru1Parameter, parametru2Parameter, parametru3Parameter, parametru4Parameter, parametru5Parameter, parametru6Parameter, parametru7Parameter);
        }
    
        public virtual int insert_sofer(string parametru, Nullable<int> parametru1, Nullable<int> parametru2, Nullable<int> parametru4)
        {
            var parametruParameter = parametru != null ?
                new ObjectParameter("parametru", parametru) :
                new ObjectParameter("parametru", typeof(string));
    
            var parametru1Parameter = parametru1.HasValue ?
                new ObjectParameter("parametru1", parametru1) :
                new ObjectParameter("parametru1", typeof(int));
    
            var parametru2Parameter = parametru2.HasValue ?
                new ObjectParameter("parametru2", parametru2) :
                new ObjectParameter("parametru2", typeof(int));
    
            var parametru4Parameter = parametru4.HasValue ?
                new ObjectParameter("parametru4", parametru4) :
                new ObjectParameter("parametru4", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_sofer", parametruParameter, parametru1Parameter, parametru2Parameter, parametru4Parameter);
        }
    
        public virtual int insert_client(string adresa, string telefon, string email)
        {
            var adresaParameter = adresa != null ?
                new ObjectParameter("adresa", adresa) :
                new ObjectParameter("adresa", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("telefon", telefon) :
                new ObjectParameter("telefon", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_client", adresaParameter, telefonParameter, emailParameter);
        }
    
        public virtual int insert_client_fizic(string num, string pre, Nullable<int> id_cl, Nullable<int> id_loc, string cnp)
        {
            var numParameter = num != null ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(string));
    
            var preParameter = pre != null ?
                new ObjectParameter("pre", pre) :
                new ObjectParameter("pre", typeof(string));
    
            var id_clParameter = id_cl.HasValue ?
                new ObjectParameter("id_cl", id_cl) :
                new ObjectParameter("id_cl", typeof(int));
    
            var id_locParameter = id_loc.HasValue ?
                new ObjectParameter("id_loc", id_loc) :
                new ObjectParameter("id_loc", typeof(int));
    
            var cnpParameter = cnp != null ?
                new ObjectParameter("cnp", cnp) :
                new ObjectParameter("cnp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_client_fizic", numParameter, preParameter, id_clParameter, id_locParameter, cnpParameter);
        }
    
        public virtual int insert_client_juridic(string num, string cui, string nr_registru, Nullable<int> id_client, Nullable<int> id_locatie)
        {
            var numParameter = num != null ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(string));
    
            var cuiParameter = cui != null ?
                new ObjectParameter("cui", cui) :
                new ObjectParameter("cui", typeof(string));
    
            var nr_registruParameter = nr_registru != null ?
                new ObjectParameter("nr_registru", nr_registru) :
                new ObjectParameter("nr_registru", typeof(string));
    
            var id_clientParameter = id_client.HasValue ?
                new ObjectParameter("id_client", id_client) :
                new ObjectParameter("id_client", typeof(int));
    
            var id_locatieParameter = id_locatie.HasValue ?
                new ObjectParameter("id_locatie", id_locatie) :
                new ObjectParameter("id_locatie", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_client_juridic", numParameter, cuiParameter, nr_registruParameter, id_clientParameter, id_locatieParameter);
        }
    }
}
